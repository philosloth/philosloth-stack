version: "3.5"

volumes:
  letsencrypt: {}
  crowd-db: {}
  crowd-data: {}

services:

  traefik:
    image: "${TRAEFIK_IMAGE}"
    container_name: "traefik"
    command:
      - "--log.level=WARNING"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.https.address=:${HTTPS}"
      - "--entrypoints.crowd-port.address=:${CROWD_PORT}"
      - "--certificatesresolvers.${PROVIDER}.acme.dnschallenge=true"
      - "--certificatesresolvers.${PROVIDER}.acme.dnschallenge.provider=${PROVIDER}"
      - "--certificatesresolvers.${PROVIDER}.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.${PROVIDER}.acme.email=${ACME_EMAIL}"
    environment:
      CF_API_EMAIL: ${CF_API_EMAIL}
      CF_API_KEY: ${CF_API_KEY}
    ports:
      - "${HTTPS}:${HTTPS}"
      - "${TRAEFIK_DASH_OUT}:${TRAEFIK_DASH}"
      - "${CROWD_PORT}:${CROWD_PORT}"
    volumes:
      - "${DOCKER_SOCK}:${DOCKER_SOCK}:ro"
      - "${LETSENCRYPT}:/${LETSENCRYPT}"
    restart: unless-stopped
    depends_on:
      - crowd
    stop_grace_period: 30s

  crowd-db:
    image: ${CROWD_DB_IMAGE}
    container_name: crowd-db
    ports:
      - "${CROWD_DB_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_DB: ${CROWD_DB}
      POSTGRES_USER: ${CROWD_DB_USER}
      POSTGRES_PASSWORD: ${CROWD_DB_PASSWORD}
    volumes:
      - ${CROWD_DB_VOL}:${PG_DATA}
    restart: unless-stopped
    stop_grace_period: 30s
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CROWD_DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  crowd:
    image: ${CROWD_IMAGE}
    container_name: crowd
    labels:
      - "traefik.enable=true"
      # Crowd web
      - "traefik.http.routers.crowd.rule=Host(`$CROWD_SERVER_PROXY_NAME`)"
      - "traefik.http.routers.crowd.tls=true"
      - "traefik.http.routers.crowd.tls.certresolver=${PROVIDER}"
      - "traefik.http.routers.crowd.entrypoints=https"
      - "traefik.http.routers.crowd.service=crowd-web"
      - "traefik.http.services.crowd-web.loadbalancer.server.port=${CROWD_DEFAULT_PORT}"
    ports: 
      - "8021:${CROWD_PORT}"
      - "${CROWD_DEFAULT_PORT}:${CROWD_DEFAULT_PORT}"
    environment:
      SERVER_PROXY_NAME: ${CROWD_SERVER_PROXY_NAME}
      SERVER_PROXY_PORT: ${CROWD_SERVER_PROXY_PORT}
      SERVER_SCHEME: ${CROWD_SERVER_SCHEME}
      SERVER_SECURE: ${CROWD_SERVER_SECURE}
      JVM_MINIMUM_MEMORY: ${CROWD_JVM_MINIMUM_MEMORY}
      JVM_MAXIMUM_MEMORY: ${CROWD_JVM_MAXIMUM_MEMORY}
    volumes:
      - type: bind
        read_only: true
        source: ${CROWD_SERVER_LOC}
        target: ${CROWD_SERVER_ATL}
      - ${CROWD_DATA_VOL}:${ATLASSIAN_DATA}/crowd
    restart: unless-stopped
    stop_grace_period: 1m30s
    depends_on: 
     - crowd-db